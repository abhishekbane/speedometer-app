{"version":3,"sources":["components/Display/Display.module.css","components/PointerDisplay/PointerDisplay.module.css","components/Speedometer/Speedometer.module.css","containers/App/App.module.css","utility/utility.ts","components/Display/Display.tsx","utility/theme.ts","components/Indicator/IndicatorUtility.ts","components/Indicator/Indicator.tsx","components/Scale/ScaleUtility.ts","components/Scale/Scale.tsx","components/PointerDisplay/PointerDisplay.tsx","components/Speedometer/Speedometer.tsx","hooks/RandomSpeed.ts","containers/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","getRadian","deg","Math","PI","Display","props","className","styles","displayContainer","display","contentBox","speed","value","unit","BASE_COLOUR_LIGHT","SECONDARY_COLOUR","Arc","context","arcStartRad","arcEndRad","indicatorEnd","low","x","y","width","radius","angleRad","startX","startY","fullRad","lead","this","cos","sin","fill","drawLead","beginPath","shadowBlur","lineWidth","arc","stroke","fillStyle","shadowColor","strokeStyle","clearRect","canvas","height","drawArc","toFixed","space","requestAnimationFrame","update","bind","Indicator","canvasRef","useRef","useState","setContext","setCanvas","current","useEffect","_context","_canvas","style","size","scale","window","devicePixelRatio","floor","getContext","center","ref","id","drawTick","x1","y1","moveTo","lineTo","Scale","ticks","high","arcBedRadius","arcBedWidth","arcLength","startOffset","endOffset","count","font","textAlign","fillText","toString","drawScale","PointerDisplay","pointerDisplay","overlap","children","Speedometer","minSpeed","maxSpeed","maxStep","randSpeed","setSpeed","generateRandomSpeed","setInterval","prevSpeed","_speed","step","random","round","useRandomSpeed","undefined","showRandomSpeed","spMeterRef","setSize","angleStartOffset","spMeter","offsetWidth","addEventListener","spMetercontainer","speedometer","App","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.249d8742.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"Display_displayContainer__1DxLX\",\"display\":\"Display_display__1Fw5G\",\"contentBox\":\"Display_contentBox__2T6br\",\"speed\":\"Display_speed__1YvNq\",\"unit\":\"Display_unit__3YYlK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointerDisplay\":\"PointerDisplay_pointerDisplay__1s96N\",\"overlap\":\"PointerDisplay_overlap__1iIff\",\"displayContainer\":\"PointerDisplay_displayContainer__3emSl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"speedometer\":\"Speedometer_speedometer__2tTzz\",\"spMetercontainer\":\"Speedometer_spMetercontainer__3G98R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__25pLo\"};","export const getRadian = (deg: number) => {\r\n    return (deg*(Math.PI/180));\r\n}\r\n\r\nexport const getDegrees = (rad: number) => {\r\n    return rad*0.0174532925;\r\n}\r\n","\r\n\r\nimport styles from './Display.module.css';\r\n\r\ninterface IDisplayProps {\r\n    value: string;\r\n}\r\n\r\nconst Display = (props: IDisplayProps) => {\r\n    \r\n    return (\r\n        <div className={styles.displayContainer}>\r\n            <div className={styles.display}>\r\n                <div className={styles.contentBox}>\r\n                    <span className={styles.speed} >{props.value}</span>\r\n                    <span className={styles.unit}>kmh</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Display;","export const BASE_COLOUR=\"#222\";\r\nexport const BASE_COLOUR_LIGHT=\"#262626\";\r\n\r\nexport const TEXT_COLOUR=\"#FFF\";\r\nexport const SECONDARY_COLOUR=\"#FFAE42\";\r\nexport const ACCENT_COLOUR = \"#FFEF00\"\r\n\r\nexport const METER_BLUR = 4;","import { ACCENT_COLOUR, SECONDARY_COLOUR } from \"../../utility/theme\";\r\n\r\ninterface IArc {\r\n    x: number; \r\n    y: number; \r\n    width: number; \r\n    radius: number; \r\n    fill: string;\r\n    angleRad: number;\r\n}\r\n\r\nexport class Arc {\r\n    public context: CanvasRenderingContext2D = {} as CanvasRenderingContext2D;\r\n    public arcStartRad: number = 0;\r\n    public arcEndRad: number = 0; \r\n    public indicatorEnd: number = 0; \r\n    public low: number= 0;\r\n    public x: number = 0;\r\n    public y: number = 0;\r\n    public width: number = 0;\r\n    public radius: number = 0;\r\n    public angleRad: number = 0;\r\n    public startX: number = 0;\r\n    public startY: number = 0;\r\n    public fullRad: number = Math.PI*2;\r\n\r\n    public lead: IArc = {    \r\n        x: this.x+this.radius*Math.cos(this.arcStartRad),\r\n        y: this.y+this.radius*Math.sin(this.arcStartRad),\r\n        radius: 5,\r\n        width: 1,\r\n        fill: ACCENT_COLOUR,\r\n        angleRad: this.fullRad\r\n    };\r\n\r\n    drawLead = (lead: IArc) => {\r\n        this.context.beginPath();\r\n        this.context.shadowBlur = 0;\r\n        this.context.lineWidth = lead.width;\r\n        \r\n        this.context.arc(lead.x, lead.y, lead.radius, 0, lead.angleRad);\r\n    \r\n        this.context.stroke();\r\n    \r\n        this.context.fillStyle = lead.fill;\r\n        this.context.fill();\r\n    }\r\n\r\n    drawArc() {\r\n        this.context.beginPath();\r\n        this.context.shadowBlur = 10;\r\n        this.context.shadowColor = SECONDARY_COLOUR;\r\n        this.context.lineWidth = this.width;\r\n        this.context.arc(this.x, this.y, this.radius, this.arcStartRad, this.angleRad, false);\r\n        this.context.strokeStyle=SECONDARY_COLOUR;\r\n        this.context.stroke();\r\n    }\r\n\r\n    update() {\r\n        this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\r\n        \r\n        this.drawLead({\r\n            x: this.startX,\r\n            y: this.startY,\r\n            radius: 4,\r\n            width: 1,\r\n            fill: SECONDARY_COLOUR,\r\n            angleRad: this.fullRad\r\n        });\r\n        \r\n        this.drawArc();\r\n        if(this.lead.x !== this.lead.y) {   \r\n            this.drawLead(this.lead);\r\n        }\r\n\r\n        this.angleRad = +this.angleRad.toFixed(2);\r\n\r\n        if(this.angleRad < this.indicatorEnd && this.indicatorEnd>=this.arcStartRad && this.indicatorEnd<=this.arcEndRad){\r\n            const space = +((this.indicatorEnd-this.angleRad)/5).toFixed(2);\r\n            this.angleRad += space;\r\n            this.lead.x = this.x+this.radius*Math.cos(this.angleRad);\r\n            this.lead.y = this.y+this.radius*Math.sin(this.angleRad);\r\n        }\r\n        else if(this.angleRad > this.indicatorEnd  && this.indicatorEnd>=this.arcStartRad && this.indicatorEnd<=this.arcEndRad) {\r\n            const space = +((this.angleRad-this.indicatorEnd)/5).toFixed(2);\r\n            this.angleRad -= space;\r\n            this.lead.x = this.x+this.radius*Math.cos(this.angleRad);\r\n            this.lead.y = this.y+this.radius*Math.sin(this.angleRad);\r\n        }\r\n        \r\n        requestAnimationFrame(this.update.bind(this));\r\n    }\r\n\r\n}","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Arc } from './IndicatorUtility';\r\n\r\ninterface IIndicatorProps {\r\n    radius: number;\r\n    size: number;\r\n    arcStartRad: number;\r\n    arcEndRad: number;\r\n    low: number;\r\n    high: number;\r\n    value: number;\r\n    width: number;\r\n}\r\n\r\nconst Indicator = (props: IIndicatorProps) => {\r\n    const canvasRef = useRef(null)  as React.RefObject<HTMLCanvasElement>;\r\n    const [context, setContext] = useState({} as CanvasRenderingContext2D);\r\n    const [canvas, setCanvas] = useState({} as HTMLCanvasElement);\r\n\r\n    let arc = useRef(new Arc()).current as Arc;\r\n\r\n    useEffect(() => {\r\n        const _canvas = canvasRef.current\r\n        let _context: CanvasRenderingContext2D | null;\r\n        if(_canvas) {\r\n            _canvas.style.width = props.size + \"px\";\r\n            _canvas.style.height = props.size + \"px\";\r\n            \r\n            var scale = window.devicePixelRatio + 0.5 || 1;\r\n            _canvas.width = Math.floor(props.size * scale);\r\n            _canvas.height = Math.floor(props.size * scale);\r\n            setCanvas(_canvas);\r\n\r\n            _context = _canvas.getContext('2d');\r\n\r\n            if(_context) {\r\n                const center = props.size/2;\r\n                _context.scale(scale, scale);\r\n                arc.radius = props.radius;\r\n                arc.width = props.width;\r\n                arc.context = _context;\r\n                arc.x = center;\r\n                arc.y = center;\r\n                arc.arcEndRad = props.arcEndRad;\r\n                arc.arcStartRad = props.arcStartRad;\r\n                arc.angleRad = props.arcStartRad;\r\n                arc.startX = center+props.radius*Math.cos(props.arcStartRad);\r\n                arc.startY = center+props.radius*Math.sin(props.arcStartRad);\r\n                arc.low = props.low;\r\n                setContext(_context);\r\n            }\r\n        }\r\n    }, [props.size, props.radius, props.arcEndRad, props.arcStartRad, props.width, props.low]);\r\n\r\n    useEffect(() => {\r\n        if(context) {\r\n            arc.indicatorEnd = props.value;\r\n        }\r\n    },[props.value]);\r\n\r\n    useEffect(() => {\r\n        arc.update();\r\n    },[]);\r\n    \r\n    return (\r\n        <canvas ref={canvasRef} id=\"canvasIndicator\">\r\n\r\n        </canvas>\r\n    );\r\n};\r\n\r\nexport default Indicator;\r\n\r\n","import { BASE_COLOUR_LIGHT, METER_BLUR, SECONDARY_COLOUR } from \"../../utility/theme\";\r\n\r\nconst drawTick = (context: any, x: number, y: number, x1: number, y1: number) => {\r\n    \r\n\tcontext.moveTo(x, y);\r\n\tcontext.lineTo(x1, y1);\r\n\tcontext.stroke();\r\n}\r\n\r\nexport const drawScale = (\r\n    context: CanvasRenderingContext2D, \r\n    arcStartRad: number, \r\n    arcEndRad: number, \r\n    ticks: number, \r\n    radius: number, \r\n    center: number,\r\n\tlow: number, \r\n    arcBedRadius?: number,\r\n    arcBedWidth?: number) => {\r\n        \r\n\tlet space = (arcEndRad-arcStartRad)/(ticks/2);\r\n\tlet arcLength = arcStartRad;\r\n\tlet startOffset = radius - 10;\r\n\tlet endOffset = radius - 20;\r\n\t\r\n\tlet x;\r\n\tlet y;\r\n\tlet x1;\r\n\tlet y1;\r\n\t\r\n\tlet count = 0;\r\n    \r\n    //draw the arc bed which shows the path of the speed indicator\r\n    if(arcBedWidth && arcBedRadius) {\r\n        context.beginPath();\r\n        context.lineWidth = arcBedWidth;\r\n        context.arc(center, center, arcBedRadius, arcStartRad, arcEndRad, false);\r\n        context.strokeStyle=BASE_COLOUR_LIGHT;\r\n        context.stroke();\r\n        \r\n        context.beginPath();\r\n        context.lineWidth = 1;\r\n        context.fillStyle = BASE_COLOUR_LIGHT;\r\n        context.arc(center+arcBedRadius*Math.cos(arcStartRad), center+arcBedRadius*Math.sin(arcStartRad), 4, 0, Math.PI*2);\r\n        context.stroke();\r\n        context.fillStyle = BASE_COLOUR_LIGHT;\r\n        context.fill();\r\n\r\n        context.beginPath();\r\n        context.lineWidth = 1;\r\n        context.arc(center+arcBedRadius*Math.cos(arcEndRad), center+arcBedRadius*Math.sin(arcEndRad), 4, 0, Math.PI*2);\r\n        context.stroke();\r\n        context.fillStyle = BASE_COLOUR_LIGHT;\r\n        context.fill();\r\n    }\r\n\r\n\twhile(arcLength < arcEndRad) {\r\n\r\n\t\tcontext.beginPath();\r\n\t\tif(count%10===0) {\r\n\t\t\tendOffset = radius - 22;\r\n\t\t\tstartOffset = radius - 8;\r\n\t\t\tcontext.font = \"15px Arial\";\r\n\t\t\tcontext.fillStyle = \"white\";\r\n\t\t\tcontext.textAlign = \"center\";\r\n            context.shadowBlur = 0;\r\n\r\n            if(radius>150 || (radius<151 && (count%20===0)) ) {\r\n                context.fillText(((count*2)+low).toString(), center+(endOffset-18)*Math.cos(arcLength), center+(endOffset-18)*Math.sin(arcLength));\r\n                context.beginPath();\r\n            }\r\n\t\t\t\r\n\t\t\tcontext.lineWidth = 1.8;\r\n\t\t\tcontext.strokeStyle = \"white\";\r\n\t\t}\r\n\t\telse if(count%5===0) {\r\n\t\t\tcontext.lineWidth = 1.8;\r\n\t\t\tcontext.strokeStyle = SECONDARY_COLOUR;\r\n\t\t\tendOffset = radius - 20;\r\n\t\t\tstartOffset = radius - 10;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontext.lineWidth = 1;\r\n\t\t\tcontext.strokeStyle= SECONDARY_COLOUR;\r\n\t\t\tendOffset = radius - 20;\r\n\t\t\tstartOffset = radius - 10;\r\n\t\t}\r\n\r\n        context.shadowBlur = METER_BLUR;\r\n        context.shadowColor = SECONDARY_COLOUR;\r\n\r\n\t\tx = center+startOffset*Math.cos(arcLength);\r\n\t\ty = center+startOffset*Math.sin(arcLength);\r\n\t\tx1 = center+endOffset*Math.cos(arcLength);\r\n\t\ty1 = center+endOffset*Math.sin(arcLength);\r\n\t\t\r\n\t\tdrawTick(context, x, y, x1, y1);\r\n\t\t\r\n\t\tarcLength += space;\r\n\t\tcount++;\r\n\t}\r\n}","\r\nimport { drawScale } from './ScaleUtility';\r\n\r\nimport { useEffect, useRef } from 'react';\r\n\r\ninterface IScaleProps {\r\n    radius: number;\r\n    size: number;\r\n    arcStartRad: number;\r\n    arcEndRad: number;\r\n    low: number;\r\n    high: number;\r\n    arcBedWidth?: number;\r\n    arcBedRadius?: number;\r\n}\r\n\r\nconst Scale = (props: IScaleProps) => {\r\n    const canvasRef = useRef(null)  as React.RefObject<HTMLCanvasElement>;\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current\r\n        let context: CanvasRenderingContext2D | null;\r\n        if(canvas) {\r\n            canvas.style.width = props.size + \"px\";\r\n            canvas.style.height = props.size + \"px\";\r\n            \r\n            const ticks = (props.high-props.low);\r\n            const center = props.size/2;\r\n            \r\n            var scale = window.devicePixelRatio + 0.5 || 1;\r\n            canvas.width = Math.floor(props.size * scale);\r\n            canvas.height = Math.floor(props.size * scale);\r\n\r\n            context = canvas.getContext('2d');\r\n            if(context) {\r\n                context.scale(scale, scale);\r\n    \r\n                drawScale(context, props.arcStartRad, props.arcEndRad, ticks, props.radius, center, props.low, props.arcBedRadius, props.arcBedWidth);\r\n            }\r\n        }\r\n        \r\n    },[props.arcEndRad, props.arcStartRad, props.radius, props.size, props.high, props.low, props.arcBedRadius, props.arcBedWidth]);\r\n\r\n    return (\r\n        <canvas ref={canvasRef} id=\"canvasScale\">\r\n\r\n        </canvas>\r\n    );\r\n};\r\n\r\nexport default Scale;","\r\n\r\nimport Indicator from '../Indicator/Indicator';\r\nimport Scale from '../Scale/Scale';\r\n\r\nimport styles from './PointerDisplay.module.css';\r\n\r\ninterface IPointerDisplayProps {\r\n    radius: number;\r\n    size: number;\r\n    arcStartRad: number;\r\n    arcEndRad: number;\r\n    low: number;\r\n    high: number;\r\n    value: number;\r\n    width: number;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst PointerDisplay = (props: IPointerDisplayProps) => {\r\n    return (\r\n        <div className={styles.pointerDisplay}>\r\n            \r\n            <div className={styles.overlap}>\r\n                <Scale\r\n                    radius={props.radius-20}\r\n                    size={props.size}\r\n                    arcEndRad={props.arcEndRad}\r\n                    arcStartRad={props.arcStartRad}\r\n                    low={props.low}\r\n                    high={props.high}\r\n                    arcBedRadius={props.radius-10}\r\n                    arcBedWidth={props.width}\r\n                />\r\n            </div>\r\n            \r\n            <div className={styles.overlap}>\r\n                <Indicator \r\n                    radius={props.radius-10}\r\n                    size={props.size}\r\n                    arcEndRad={props.arcEndRad}\r\n                    arcStartRad={props.arcStartRad}\r\n                    low={props.low}\r\n                    high={props.high}\r\n                    value={props.value}\r\n                    width={props.width}\r\n                />\r\n            </div>\r\n\r\n            <div className={`${styles.overlap} ${styles.displayContainer}`}>\r\n                {props.children}\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PointerDisplay;","import { useEffect, useRef, useState } from 'react';\r\nimport { useRandomSpeed } from '../../hooks/RandomSpeed';\r\nimport { getRadian } from '../../utility/utility';\r\nimport Display from '../Display/Display';\r\nimport PointerDisplay from '../PointerDisplay/PointerDisplay';\r\n\r\nimport styles from './Speedometer.module.css';\r\n\r\ninterface ISpeedometer {\r\n    low: number;\r\n    high: number;\r\n    value?: number;\r\n    showRandomSpeed?: boolean\r\n}\r\n\r\nconst Speedometer = (props:ISpeedometer) => {\r\n    let {randSpeed, generateRandomSpeed} = useRandomSpeed(props.low, props.high, 10);\r\n        useEffect(() => {\r\n            generateRandomSpeed();\r\n    },[]);\r\n\r\n    const value = props.value!==undefined && !props.showRandomSpeed ? props.value : randSpeed;\r\n\r\n    const spMeterRef = useRef({}) as React.RefObject<HTMLDivElement>;\r\n    const [size, setSize] = useState(0);\r\n\r\n    const diff = 360-(props.high-props.low);\r\n    const angleStartOffset = 90 + (diff/2);\r\n    const arcStartRad = getRadian(angleStartOffset);\r\n    const arcEndRad = getRadian(angleStartOffset+(props.high-props.low));\r\n    let indicatorEnd = getRadian(angleStartOffset+value-props.low);\r\n\r\n    useEffect(() => {\r\n        const spMeter = spMeterRef.current;\r\n        if(spMeter) {\r\n            setSize(spMeter.offsetWidth);\r\n            window.addEventListener('resize', () => {\r\n                setSize(spMeter.offsetWidth);\r\n            });\r\n        }\r\n    }, []);\r\n    \r\n    return (\r\n        <article className={styles.spMetercontainer}>\r\n            <div ref={spMeterRef} className={styles.speedometer}>\r\n                <PointerDisplay \r\n                    radius={size>0?(size-20)/2:100}\r\n                    size={size}\r\n                    arcEndRad={+arcEndRad.toFixed(2)}\r\n                    arcStartRad={+arcStartRad.toFixed(2)}\r\n                    low={props.low}\r\n                    high={props.high}\r\n                    value={+indicatorEnd.toFixed(2)}\r\n                    width={10}\r\n                >\r\n                <Display value={\"\"+value} />\r\n                </PointerDisplay>\r\n            </div>\r\n        </article>\r\n        \r\n    );\r\n};\r\n\r\nexport default Speedometer;","import { useState } from \"react\"\r\n\r\nexport const useRandomSpeed = (minSpeed: number, maxSpeed: number, maxStep: number) => {\r\n    const [randSpeed, setSpeed] = useState(minSpeed);\r\n\r\n    const generateRandomSpeed = () => {\r\n        setInterval(() => {\r\n            setSpeed (prevSpeed => {\r\n                let _speed;\r\n                const step = maxStep*Math.random();\r\n                const toss = Math.random();\r\n                if(toss<0.6){\r\n                    _speed = prevSpeed + step;\r\n                    if(_speed > maxSpeed) {\r\n                        _speed = prevSpeed - step;\r\n                    }\r\n                    if(_speed<minSpeed) {\r\n                        return prevSpeed;\r\n                    }\r\n                    return Math.round(_speed);\r\n                }\r\n                else {\r\n                    _speed = prevSpeed - step;\r\n                    if(_speed < minSpeed) {\r\n                        _speed = prevSpeed + step;\r\n                    }\r\n                    if(_speed>maxSpeed) {\r\n                        return prevSpeed;\r\n                    }\r\n                    return Math.round(_speed);\r\n                }\r\n                \r\n            });\r\n        }, 1000);\r\n    };\r\n\r\n    return {randSpeed, generateRandomSpeed};\r\n}","import React from 'react';\n\nimport Speedometer from '../../components/Speedometer/Speedometer';\n\nimport styles from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <Speedometer low={0} high={220} value={0} showRandomSpeed/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}